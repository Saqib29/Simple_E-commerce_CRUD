# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  id: ID!
  created_at: DateTime!
  name: String!
  price: Float!
  category: ProductCategory!
  orderItems: [OrderItem!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ProductCategory {
  ELECTRONICS
  CLOTHING
  BOOKS
  HOME
  SPORTS
}

type OrderItem {
  id: ID!
  created_at: DateTime!
  order: Order!
  product: Product!
  quantity: Float!
  unit_price: Float!
}

type Order {
  id: ID!
  created_at: DateTime!
  user: User!
  total_amount: Float!
  status: OrderStatus!
  orderItems: [OrderItem!]!
}

enum OrderStatus {
  PENDING
  CANCELLED
}

type User {
  id: ID!
  created_at: DateTime!
  email: String!
  name: String!
  password: String!
  role: Role!
  status: UserStatus!
  orders: [Order!]
}

enum Role {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

type SalesPerCategoryDto {
  category: ProductCategory!
  totalSales: Float!
}

type TotalSalesPerCategoryDto {
  category: String!
  totalSales: Float!
}

type TopUserDto {
  userId: String!
  userEmail: String!
  orderCount: Int!
}

type AuthResponseDto {
  access_token: String!
}

type Query {
  hello: String!
  allUsersWithOrders(pagination: PaginationDto!): [User!]!
  getUserById(id: Int!): User!
  getUserByEmail(email: String!): User!
  allProducts(pagination: PaginationDto!): [Product!]!
  totalSalesPerCategory: [TotalSalesPerCategoryDto!]!
  userOrders: [Order!]!
  topUsers: [TopUserDto!]!
}

input PaginationDto {
  page: Int! = 1
  limit: Int! = 10
}

type Mutation {
  updateUser(updateUserDto: UpdateUserDto!): User!
  deactivateUser(id: Int!): Boolean!
  createProduct(createProductDto: CreateProductDto!): Product!
  updateProduct(updateProductDto: UpdateProductDto!): Product!
  deleteProduct(deleteProductDto: DeleteProductDto!): Boolean!
  createOrder(productId: ID!, quantity: Float!): Order!
  cancelOrder(id: ID!): Order!
  signin(signInDto: SignInDto!): AuthResponseDto!
  signup(signUpDto: SignUpDto!): AuthResponseDto!
}

input UpdateUserDto {
  name: String
  password: String
}

input CreateProductDto {
  name: String!
  price: Float!
  category: ProductCategory!
}

input UpdateProductDto {
  id: Int!
  name: String
  price: Float
  category: ProductCategory
}

input DeleteProductDto {
  id: Float!
}

input SignInDto {
  email: String!
  password: String!
}

input SignUpDto {
  email: String!
  name: String!
  password: String!
}